version: "3.7"

services:
  php:
    image: nanoninja/php-fpm:${PHP_VERSION}
    restart: always
    volumes:
      # - "./etc/php/php.ini:/usr/local/etc/php/conf.d/php.ini"
      - ./lms:/var/www/php/lms
    networks:
      - app-network

  composer:
    image: "composer"
    volumes:
        - "./lms:/lms"
    command: install
    networks:
      - app-network

  node:
    image: node:8.15.0
    container_name: "node8"
    restart: unless-stopped
    ports:
      - 9001:9001
    volumes:
      - ./lms/ws/server:/app/server
      - ./webservice/certbot/conf/:/app/ssl
    working_dir: /app/server
    command: >
      sh -c "npm install -g pm2 && npm install && pm2-runtime server.js --watch"
    networks:
      - app-network

  nginx:
    image: nginx:1.15-alpine
    restart: unless-stopped
    volumes:
      - ./webservice/nginx:/etc/nginx/conf.d
      - ./webservice/certbot/conf:/etc/letsencrypt
      - ./webservice/certbot/www:/var/www/certbot
      - ./lms:/var/www/php/lms
    # command: "cp -rf /data/lms /var/www/lms"
    ports:
      - "80:80"
      - "443:443"
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    depends_on:
      - php
      - mysqldb
    networks:
      - app-network

  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./webservice/certbot/conf:/etc/letsencrypt
      - ./webservice/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    networks:
      - app-network

  mysqldb:
    image: mysql:${MYSQL_VERSION}
    container_name: ${MYSQL_HOST}
    restart: always
    env_file:
        - ".env"
    environment:
        - MYSQL_DATABASE=${MYSQL_DATABASE}
        - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
        - MYSQL_USER=${MYSQL_USER}
        - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - ./:/lms
      - dbdata:/var/lib/mysql
    networks:
      - app-network

  stun:
    image: boldt/coturn
    container_name: coturn
    restart: always
    ports:
      - 3478:3478/tcp
      - 3478:3478/udp

volumes:
  dbdata:

networks:
  app-network:
    driver: bridge